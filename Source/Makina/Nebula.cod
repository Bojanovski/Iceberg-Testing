//
// FX Version: fx_5_0
//
// 6 local buffer(s)
//
cbuffer cbPerFrameSSAO
{
    float4x4 gViewToTexSpace;           // Offset:    0, size:   64
    float4  gOffsetVectors[14];         // Offset:   64, size:  224
    float4  gFrustumCorners[4];         // Offset:  288, size:   64
    float   gOcclusionRadius = 0.100000001;// Offset:  352, size:    4
    float   gOcclusionFadeStart = 0.200000003;// Offset:  356, size:    4
    float   gOcclusionFadeEnd = 2;      // Offset:  360, size:    4
    float   gSurfaceEpsilon = 0.0500000007;// Offset:  364, size:    4
}

cbuffer cbPerFrameCamPropSSAO
{
    float   gZNear;                     // Offset:    0, size:    4
    float   gZFar;                      // Offset:    4, size:    4
}

cbuffer cbPerFrameBlurSSAO
{
    float   gTexelWidth;                // Offset:    0, size:    4
    float   gTexelHeight;               // Offset:    4, size:    4
}

cbuffer cbSettingsSSAO
{
    float   gWeights[11] = { 0.0500000007, 0.0500000007, 0.100000001, 0.100000001, 0.100000001, 0.200000003, 0.100000001, 0.100000001, 0.100000001, 0.0500000007, 0.0500000007 };// Offset:    0, size:  164
}

cbuffer cbPerFrame
{
    float4x4 gView;                     // Offset:    0, size:   64
    float4x4 gInvView;                  // Offset:   64, size:   64
}

cbuffer cbFixed
{
    float2  gTexC[4] = { 1, 1, 0, 1, 1, 0, 0, 0 };// Offset:    0, size:   56
}

//
// 17 local object(s)
//
DepthStencilState DisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState NoDepthWrites
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
BlendState AdditiveBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[1] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[2] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[3] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[4] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[5] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[6] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[7] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(ONE /* 2 */);
    DestBlend[1] = uint(ONE /* 2 */);
    DestBlend[2] = uint(ONE /* 2 */);
    DestBlend[3] = uint(ONE /* 2 */);
    DestBlend[4] = uint(ONE /* 2 */);
    DestBlend[5] = uint(ONE /* 2 */);
    DestBlend[6] = uint(ONE /* 2 */);
    DestBlend[7] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    BlendOp[1] = uint(ADD /* 1 */);
    BlendOp[2] = uint(ADD /* 1 */);
    BlendOp[3] = uint(ADD /* 1 */);
    BlendOp[4] = uint(ADD /* 1 */);
    BlendOp[5] = uint(ADD /* 1 */);
    BlendOp[6] = uint(ADD /* 1 */);
    BlendOp[7] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    SrcBlendAlpha[1] = uint(ZERO /* 1 */);
    SrcBlendAlpha[2] = uint(ZERO /* 1 */);
    SrcBlendAlpha[3] = uint(ZERO /* 1 */);
    SrcBlendAlpha[4] = uint(ZERO /* 1 */);
    SrcBlendAlpha[5] = uint(ZERO /* 1 */);
    SrcBlendAlpha[6] = uint(ZERO /* 1 */);
    SrcBlendAlpha[7] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[1] = uint(ZERO /* 1 */);
    DestBlendAlpha[2] = uint(ZERO /* 1 */);
    DestBlendAlpha[3] = uint(ZERO /* 1 */);
    DestBlendAlpha[4] = uint(ZERO /* 1 */);
    DestBlendAlpha[5] = uint(ZERO /* 1 */);
    DestBlendAlpha[6] = uint(ZERO /* 1 */);
    DestBlendAlpha[7] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    BlendOpAlpha[1] = uint(ADD /* 1 */);
    BlendOpAlpha[2] = uint(ADD /* 1 */);
    BlendOpAlpha[3] = uint(ADD /* 1 */);
    BlendOpAlpha[4] = uint(ADD /* 1 */);
    BlendOpAlpha[5] = uint(ADD /* 1 */);
    BlendOpAlpha[6] = uint(ADD /* 1 */);
    BlendOpAlpha[7] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
RasterizerState Depth
{
    DepthBias = uint(0x00004e20);
    DepthBiasClamp = float(0);
    SlopeScaledDepthBias = float(1);
    CullMode = uint(NONE /* 1 */);
};
RasterizerState NoCulling
{
    CullMode = uint(NONE /* 1 */);
};
Texture2D gNormalDepthMap;
Texture2D gInputImage;
Texture2D gRandomVecMap;
SamplerState samNormalDepthBlur
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState samNormalDepth16Bit
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 100000);
};
SamplerState samNormalDepth8Bit
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 100000, 100000);
};
SamplerState samInputImage
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState samRandomVec
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture3D g3DNoiseMap;
Texture2D gPaletteMap;
SamplerState samLinearWrap
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    AddressW = uint(WRAP /* 1 */);
};
SamplerState samLinearClamp
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    AddressW = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 NebulaTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   x           1     NONE  float   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0      w        0     NONE  float      w
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.x
                dcl_output o0.xyz
                dcl_output o0.w
                dcl_temps 1
                
                #line 69 "G:\PROGRAMMING\Project Iceberg\Makina\Nebula.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, v1.x  // vout<3>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o0.w, r0.w  // VS<3>
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gView;                    // Offset:    0 Size:    64
                //   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexC[4];                   // Offset:    0 Size:    56
                //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0      w        0     NONE  float      w
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:TEXCOORD              0   xy          1     NONE  float   xy  
                // m0:SIZE                  0     z         1     NONE  float     z 
                // m0:POSITION              0   xyz         2     NONE  float   xyz 
                // m0:SV_PrimitiveID        0   x           3   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[3], immediateIndexed
                dcl_constantbuffer cb1[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][0].w
                dcl_input vPrim
                dcl_temps 4
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_output o1.z
                dcl_output o2.xyz
                dcl_output_sgv o3.x, primitive_id
                dcl_maxout 4
                
                #line 87 "G:\PROGRAMMING\Project Iceberg\Makina\Nebula.fx"
                mul r0.xy, cb1[0].xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                add r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)  // gout<0:Inf,1:Inf>
                mov r0.zw, l(0,0,0,1.000000)  // gout<2: 0f,3: 1f>
                mul r1.xy, cb1[0].xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                add r1.xy, r1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)  // gout<4,5>
                mov r2.xyz, v[0][0].xyzx
                mov r2.w, l(1.000000)
                dp4 r3.x, r2.xyzw, cb0[0].xyzw  // gout<6:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb0[1].xyzw  // gout<7:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb0[2].xyzw  // gout<8:NaN:Inf>
                mov r1.z, v[0][0].w  // gout<9>
                mov r1.w, vPrim  // gout<10>
                mov o0.xyzw, r0.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r1.xyxx  // triStream<0,0>
                mov o1.z, r1.z  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.x, r1.w  // triStream<0>
                emit_stream m0
                
                #line 87
                mul r0.xy, cb1[1].xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                add r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)  // gout<0:Inf,1:Inf>
                mov r0.zw, l(0,0,0,1.000000)  // gout<2: 0f,3: 1f>
                mul r1.xy, cb1[1].xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                add r1.xy, r1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)  // gout<4,5>
                dp4 r3.x, r2.xyzw, cb0[0].xyzw  // gout<6:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb0[1].xyzw  // gout<7:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb0[2].xyzw  // gout<8:NaN:Inf>
                
                #line 92
                mov o0.xyzw, r0.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r1.xyxx  // triStream<0,0>
                mov o1.z, r1.z  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.x, r1.w  // triStream<0>
                emit_stream m0
                
                #line 87
                mul r0.xy, cb1[2].xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                add r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)  // gout<0:Inf,1:Inf>
                mov r0.zw, l(0,0,0,1.000000)  // gout<2: 0f,3: 1f>
                mul r1.xy, cb1[2].xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                add r1.xy, r1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)  // gout<4,5>
                dp4 r3.x, r2.xyzw, cb0[0].xyzw  // gout<6:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb0[1].xyzw  // gout<7:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb0[2].xyzw  // gout<8:NaN:Inf>
                
                #line 92
                mov o0.xyzw, r0.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r1.xyxx  // triStream<0,0>
                mov o1.z, r1.z  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.x, r1.w  // triStream<0>
                emit_stream m0
                
                #line 87
                mul r0.xy, cb1[3].xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                add r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)  // gout<0:Inf,1:Inf>
                mov r0.zw, l(0,0,0,1.000000)  // gout<2: 0f,3: 1f>
                mul r1.xy, cb1[3].xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
                add r1.xy, r1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)  // gout<4,5>
                dp4 r3.x, r2.xyzw, cb0[0].xyzw  // gout<6:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb0[1].xyzw  // gout<7:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb0[2].xyzw  // gout<8:NaN:Inf>
                
                #line 92
                mov o0.xyzw, r0.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r1.xyxx  // triStream<0,0>
                mov o1.z, r1.z  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.x, r1.w  // triStream<0>
                emit_stream m0
                
                #line 78
                ret 
                // Approximately 61 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrameSSAO
                // {
                //
                //   float4x4 gViewToTexSpace;          // Offset:    0 Size:    64 [unused]
                //   float4 gOffsetVectors[14];         // Offset:   64 Size:   224 [unused]
                //   float4 gFrustumCorners[4];         // Offset:  288 Size:    64
                //   float gOcclusionRadius;            // Offset:  352 Size:     4 [unused]
                //      = 0x3dcccccd 
                //   float gOcclusionFadeStart;         // Offset:  356 Size:     4 [unused]
                //      = 0x3e4ccccd 
                //   float gOcclusionFadeEnd;           // Offset:  360 Size:     4 [unused]
                //      = 0x40000000 
                //   float gSurfaceEpsilon;             // Offset:  364 Size:     4 [unused]
                //      = 0x3d4ccccd 
                //
                // }
                //
                // cbuffer cbPerFrameCamPropSSAO
                // {
                //
                //   float gZNear;                      // Offset:    0 Size:     4
                //   float gZFar;                       // Offset:    4 Size:     4
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
                //   float4x4 gInvView;                 // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samNormalDepth8Bit                sampler      NA          NA    0        1
                // samLinearWrap                     sampler      NA          NA    1        1
                // samLinearClamp                    sampler      NA          NA    2        1
                // gNormalDepthMap                   texture  float4          2d    0        1
                // g3DNoiseMap                       texture  float4          3d    1        1
                // gPaletteMap                       texture  float4          2d    2        1
                // cbPerFrameSSAO                    cbuffer      NA          NA    0        1
                // cbPerFrameCamPropSSAO             cbuffer      NA          NA    1        1
                // cbPerFrame                        cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // SIZE                     0     z         1     NONE  float     z 
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // SV_PrimitiveID           0   x           3   PRIMID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[22], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_constantbuffer cb2[7], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture3d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xy
                dcl_input_ps linear v1.z
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 62
                
                #line 130 "G:\PROGRAMMING\Project Iceberg\Makina\Nebula.fx"
                mov r0.xyz, -cb0[19].xyzx
                add r0.xyz, r0.xyzx, cb0[18].xyzx
                mul r0.xyz, r0.xyzx, v1.xxxx
                add r0.xyz, r0.xyzx, cb0[19].xyzx
                mov r1.xyz, -cb0[21].xyzx
                add r1.xyz, r1.xyzx, cb0[20].xyzx
                mul r1.xyz, r1.xyzx, v1.xxxx
                add r1.xyz, r1.xyzx, cb0[21].xyzx
                mov r2.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, v1.yyyy
                add r0.xyz, r0.xyzx, r1.xyzx  // posV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                mov r1.xyz, -v2.xyzx  // m<0,1,2>
                mul r0.w, v1.z, v1.z  // sRadSq<0:Inf:[0f,1.#INFf]>
                dp3 r1.w, r1.xyzx, r1.xyzx
                mov r0.w, -r0.w
                add r0.w, r0.w, r1.w  // c<0:NaN:Inf>
                dp3 r1.w, r0.xyzx, r0.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r0.xyzx, r1.wwww  // d<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r1.xyzx, r2.xyzx  // b<0:NaN:Inf>
                mul r1.y, r1.x, r1.x
                mov r0.w, -r0.w
                add r0.w, r0.w, r1.y  // discr<0:NaN:Inf>
                ge r1.y, l(0.000000), r0.w
                mov r1.x, -r1.x
                sqrt r0.w, r0.w
                mov r1.z, -r0.w
                add r1.z, r1.z, r1.x  // t1<0:NaN:Inf>
                add r0.w, r0.w, r1.x  // t2<0:NaN:Inf>
                
                #line 144
                lt r1.x, l(0.000000), r1.z
                if_nz r1.x
                  mul r1.xzw, r2.xxyz, r1.zzzz
                  add r3.xyz, r1.xzwx, l(0.000000, 0.000000, 0.000000, 0.000000)  // q1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                else 
                  mov r3.xyz, l(0,0,0,0)  // q1<0: 0f,1: 0f,2: 0f>
                endif 
                lt r1.x, l(0.000000), r0.w
                if_nz r1.x
                  mul r1.xzw, r2.xxyz, r0.wwww
                  add r2.xyz, r1.xzwx, l(0.000000, 0.000000, 0.000000, 0.000000)  // q2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                else 
                  mov r2.xyz, l(0,0,0,0)  // q2<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 149
                sample_l_indexable(texture2d)(float,float,float,float) r1.xz, v1.xyxx, t0.zxwy, s0, l(0.000000)
                mov r1.xz, r1.xxzx  // input<2:Inf,3:Inf>
                
                #line 119 "SSAO-Utilities.fx"
                div r0.w, r1.z, l(255.000000)
                add r0.w, r0.w, r1.x  // depth<0:NaN:Inf>
                
                #line 122
                mov r1.x, -cb1[0].x
                add r1.x, r1.x, cb1[0].y
                mul r0.w, r0.w, r1.x
                add r0.w, r0.w, cb1[0].x  // depth<0:NaN:Inf>
                
                #line 149 "G:\PROGRAMMING\Project Iceberg\Makina\Nebula.fx"
                mov r0.w, r0.w  // pz<0:NaN:Inf>
                div r0.w, r0.w, cb1[0].y
                mul r0.xyz, r0.wwww, r0.xyzx  // p<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r0.w, r0.z, r3.z
                if_nz r0.w
                  mov r3.xyz, r0.xyzx  // q1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                lt r0.w, r0.z, r2.z
                if_nz r0.w
                  mov r2.xyz, r0.xyzx  // q2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 156
                mov r3.w, l(1.000000)
                dp4 r0.x, r3.xyzw, cb2[4].xyzw  // q1<0:NaN:Inf>
                dp4 r0.y, r3.xyzw, cb2[5].xyzw  // q1<1:NaN:Inf>
                dp4 r0.z, r3.xyzw, cb2[6].xyzw  // q1<2:NaN:Inf>
                mov r2.w, l(1.000000)
                dp4 r3.x, r2.xyzw, cb2[4].xyzw  // q2<0:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb2[5].xyzw  // q2<1:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb2[6].xyzw  // q2<2:NaN:Inf>
                mov r2.xyz, v2.xyzx
                mov r2.w, l(1.000000)
                dp4 r4.x, r2.xyzw, cb2[4].xyzw  // sphereCenterW<0:NaN:Inf>
                dp4 r4.y, r2.xyzw, cb2[5].xyzw  // sphereCenterW<1:NaN:Inf>
                dp4 r4.z, r2.xyzw, cb2[6].xyzw  // sphereCenterW<2:NaN:Inf>
                
                #line 161
                mov r1.xzw, -r0.xxyz
                add r1.xzw, r1.xxzw, r3.xxyz  // r<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xzwx, r1.xzwx
                sqrt r2.x, r0.w  // rLen<0:NaN:Inf>
                div r2.x, r2.x, l(60.000000)  // dr<0:NaN:Inf>
                mov r0.xyz, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                rsq r0.w, r0.w
                mul r1.xzw, r0.wwww, r1.xxzw  // nr<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.w, v1.z, l(2.000000)  // sphereDiameter<0:Inf>
                div r0.w, l(1.000000), r0.w  // noiseScale<0:Inf>
                
                #line 172
                mov r2.yzw, -r4.xxyz
                add r3.xyz, r0.xyzx, r2.yzwy
                mul r3.xyz, r0.wwww, r3.xyzx
                add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r3.x, r3.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r3.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t2.xyzw, s2
                mul r1.xzw, r1.xxzw, r2.xxxx
                add r0.xyz, r0.xyzx, r1.xzwx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r4.xyz, r2.yzwy, r0.xyzx
                mul r4.xyz, r0.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r4.x, r4.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r4.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r5.xyz, r2.yzwy, r0.xyzx
                mul r5.xyz, r0.wwww, r5.xyzx
                add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r5.x, r5.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r5.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r6.xyz, r2.yzwy, r0.xyzx
                mul r6.xyz, r0.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r6.x, r6.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r6.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r7.xyz, r2.yzwy, r0.xyzx
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r7.x, r7.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r7.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r8.xyz, r2.yzwy, r0.xyzx
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r8.x, r8.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r8.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r9.xyz, r2.yzwy, r0.xyzx
                mul r9.xyz, r0.wwww, r9.xyzx
                add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r9.x, r9.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r9.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r10.xyz, r2.yzwy, r0.xyzx
                mul r10.xyz, r0.wwww, r10.xyzx
                add r10.xyz, r10.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r10.x, r10.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r10.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r11.xyz, r2.yzwy, r0.xyzx
                mul r11.xyz, r0.wwww, r11.xyzx
                add r11.xyz, r11.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r11.x, r11.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r11.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r11.xyz, r11.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r12.xyz, r2.yzwy, r0.xyzx
                mul r12.xyz, r0.wwww, r12.xyzx
                add r12.xyz, r12.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r12.x, r12.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r12.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r13.xyz, r2.yzwy, r0.xyzx
                mul r13.xyz, r0.wwww, r13.xyzx
                add r13.xyz, r13.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r13.x, r13.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r13.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r13.xyz, r13.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r14.xyz, r2.yzwy, r0.xyzx
                mul r14.xyz, r0.wwww, r14.xyzx
                add r14.xyz, r14.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r14.x, r14.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r14.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r15.xyz, r2.yzwy, r0.xyzx
                mul r15.xyz, r0.wwww, r15.xyzx
                add r15.xyz, r15.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r15.x, r15.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r15.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r15.xyz, r15.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r16.xyz, r2.yzwy, r0.xyzx
                mul r16.xyz, r0.wwww, r16.xyzx
                add r16.xyz, r16.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r16.x, r16.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r16.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r16.xyz, r16.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r17.xyz, r2.yzwy, r0.xyzx
                mul r17.xyz, r0.wwww, r17.xyzx
                add r17.xyz, r17.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r17.x, r17.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r17.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r17.xyz, r17.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r18.xyz, r2.yzwy, r0.xyzx
                mul r18.xyz, r0.wwww, r18.xyzx
                add r18.xyz, r18.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r18.x, r18.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r18.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r19.xyz, r2.yzwy, r0.xyzx
                mul r19.xyz, r0.wwww, r19.xyzx
                add r19.xyz, r19.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r19.x, r19.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r19.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r20.xyz, r2.yzwy, r0.xyzx
                mul r20.xyz, r0.wwww, r20.xyzx
                add r20.xyz, r20.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r20.x, r20.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r20.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r20.xyz, r20.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r21.xyz, r2.yzwy, r0.xyzx
                mul r21.xyz, r0.wwww, r21.xyzx
                add r21.xyz, r21.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r21.x, r21.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r21.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r21.xyz, r21.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r22.xyz, r2.yzwy, r0.xyzx
                mul r22.xyz, r0.wwww, r22.xyzx
                add r22.xyz, r22.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r22.x, r22.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r22.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r22.xyz, r22.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r23.xyz, r2.yzwy, r0.xyzx
                mul r23.xyz, r0.wwww, r23.xyzx
                add r23.xyz, r23.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r23.x, r23.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r23.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r23.xyz, r23.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r24.xyz, r2.yzwy, r0.xyzx
                mul r24.xyz, r0.wwww, r24.xyzx
                add r24.xyz, r24.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r24.x, r24.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r24.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r24.xyz, r24.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r25.xyz, r2.yzwy, r0.xyzx
                mul r25.xyz, r0.wwww, r25.xyzx
                add r25.xyz, r25.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r25.x, r25.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r25.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r25.xyz, r25.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r26.xyz, r2.yzwy, r0.xyzx
                mul r26.xyz, r0.wwww, r26.xyzx
                add r26.xyz, r26.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r26.x, r26.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r26.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r26.xyz, r26.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r27.xyz, r2.yzwy, r0.xyzx
                mul r27.xyz, r0.wwww, r27.xyzx
                add r27.xyz, r27.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r27.x, r27.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r27.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r27.xyz, r27.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r28.xyz, r2.yzwy, r0.xyzx
                mul r28.xyz, r0.wwww, r28.xyzx
                add r28.xyz, r28.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r28.x, r28.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r28.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r28.xyz, r28.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r29.xyz, r2.yzwy, r0.xyzx
                mul r29.xyz, r0.wwww, r29.xyzx
                add r29.xyz, r29.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r29.x, r29.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r29.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r29.xyz, r29.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r30.xyz, r2.yzwy, r0.xyzx
                mul r30.xyz, r0.wwww, r30.xyzx
                add r30.xyz, r30.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r30.x, r30.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r30.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r30.xyz, r30.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r31.xyz, r2.yzwy, r0.xyzx
                mul r31.xyz, r0.wwww, r31.xyzx
                add r31.xyz, r31.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r31.x, r31.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r31.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r31.xyz, r31.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r32.xyz, r2.yzwy, r0.xyzx
                mul r32.xyz, r0.wwww, r32.xyzx
                add r32.xyz, r32.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r32.x, r32.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r32.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r32.xyz, r32.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r33.xyz, r2.yzwy, r0.xyzx
                mul r33.xyz, r0.wwww, r33.xyzx
                add r33.xyz, r33.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r33.x, r33.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r33.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r33.xyz, r33.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r34.xyz, r2.yzwy, r0.xyzx
                mul r34.xyz, r0.wwww, r34.xyzx
                add r34.xyz, r34.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r34.x, r34.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r34.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r34.xyz, r34.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r35.xyz, r2.yzwy, r0.xyzx
                mul r35.xyz, r0.wwww, r35.xyzx
                add r35.xyz, r35.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r35.x, r35.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r35.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r35.xyz, r35.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r36.xyz, r2.yzwy, r0.xyzx
                mul r36.xyz, r0.wwww, r36.xyzx
                add r36.xyz, r36.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r36.x, r36.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r36.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r36.xyz, r36.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r37.xyz, r2.yzwy, r0.xyzx
                mul r37.xyz, r0.wwww, r37.xyzx
                add r37.xyz, r37.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r37.x, r37.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r37.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r37.xyz, r37.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r38.xyz, r2.yzwy, r0.xyzx
                mul r38.xyz, r0.wwww, r38.xyzx
                add r38.xyz, r38.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r38.x, r38.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r38.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r38.xyz, r38.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r39.xyz, r2.yzwy, r0.xyzx
                mul r39.xyz, r0.wwww, r39.xyzx
                add r39.xyz, r39.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r39.x, r39.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r39.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r39.xyz, r39.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r40.xyz, r2.yzwy, r0.xyzx
                mul r40.xyz, r0.wwww, r40.xyzx
                add r40.xyz, r40.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r40.x, r40.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r40.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r40.xyz, r40.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r41.xyz, r2.yzwy, r0.xyzx
                mul r41.xyz, r0.wwww, r41.xyzx
                add r41.xyz, r41.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r41.x, r41.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r41.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r41.xyz, r41.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r42.xyz, r2.yzwy, r0.xyzx
                mul r42.xyz, r0.wwww, r42.xyzx
                add r42.xyz, r42.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r42.x, r42.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r42.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r42.xyz, r42.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r43.xyz, r2.yzwy, r0.xyzx
                mul r43.xyz, r0.wwww, r43.xyzx
                add r43.xyz, r43.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r43.x, r43.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r43.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r43.xyz, r43.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r44.xyz, r2.yzwy, r0.xyzx
                mul r44.xyz, r0.wwww, r44.xyzx
                add r44.xyz, r44.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r44.x, r44.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r44.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r44.xyz, r44.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r45.xyz, r2.yzwy, r0.xyzx
                mul r45.xyz, r0.wwww, r45.xyzx
                add r45.xyz, r45.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r45.x, r45.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r45.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r45.xyz, r45.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r46.xyz, r2.yzwy, r0.xyzx
                mul r46.xyz, r0.wwww, r46.xyzx
                add r46.xyz, r46.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r46.x, r46.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r46.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r46.xyz, r46.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r47.xyz, r2.yzwy, r0.xyzx
                mul r47.xyz, r0.wwww, r47.xyzx
                add r47.xyz, r47.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r47.x, r47.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r47.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r47.xyz, r47.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r48.xyz, r2.yzwy, r0.xyzx
                mul r48.xyz, r0.wwww, r48.xyzx
                add r48.xyz, r48.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r48.x, r48.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r48.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r48.xyz, r48.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r49.xyz, r2.yzwy, r0.xyzx
                mul r49.xyz, r0.wwww, r49.xyzx
                add r49.xyz, r49.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r49.x, r49.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r49.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r49.xyz, r49.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r50.xyz, r2.yzwy, r0.xyzx
                mul r50.xyz, r0.wwww, r50.xyzx
                add r50.xyz, r50.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r50.x, r50.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r50.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r50.xyz, r50.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r51.xyz, r2.yzwy, r0.xyzx
                mul r51.xyz, r0.wwww, r51.xyzx
                add r51.xyz, r51.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r51.x, r51.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r51.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r51.xyz, r51.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r52.xyz, r2.yzwy, r0.xyzx
                mul r52.xyz, r0.wwww, r52.xyzx
                add r52.xyz, r52.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r52.x, r52.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r52.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r52.xyz, r52.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r53.xyz, r2.yzwy, r0.xyzx
                mul r53.xyz, r0.wwww, r53.xyzx
                add r53.xyz, r53.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r53.x, r53.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r53.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r53.xyz, r53.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r54.xyz, r2.yzwy, r0.xyzx
                mul r54.xyz, r0.wwww, r54.xyzx
                add r54.xyz, r54.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r54.x, r54.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r54.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r54.xyz, r54.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r55.xyz, r2.yzwy, r0.xyzx
                mul r55.xyz, r0.wwww, r55.xyzx
                add r55.xyz, r55.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r55.x, r55.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r55.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r55.xyz, r55.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r56.xyz, r2.yzwy, r0.xyzx
                mul r56.xyz, r0.wwww, r56.xyzx
                add r56.xyz, r56.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r56.x, r56.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r56.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r56.xyz, r56.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r57.xyz, r2.yzwy, r0.xyzx
                mul r57.xyz, r0.wwww, r57.xyzx
                add r57.xyz, r57.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r57.x, r57.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r57.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r57.xyz, r57.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r58.xyz, r2.yzwy, r0.xyzx
                mul r58.xyz, r0.wwww, r58.xyzx
                add r58.xyz, r58.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r58.x, r58.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r58.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r58.xyz, r58.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r59.xyz, r2.yzwy, r0.xyzx
                mul r59.xyz, r0.wwww, r59.xyzx
                add r59.xyz, r59.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r59.x, r59.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r59.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r59.xyz, r59.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r60.xyz, r2.yzwy, r0.xyzx
                mul r60.xyz, r0.wwww, r60.xyzx
                add r60.xyz, r60.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r60.x, r60.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r60.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r60.xyz, r60.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r61.xyz, r2.yzwy, r0.xyzx
                mul r61.xyz, r0.wwww, r61.xyzx
                add r61.xyz, r61.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r61.x, r61.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r61.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r61.xyz, r61.xyxx, t2.xyzw, s2
                add r0.xyz, r1.xzwx, r0.xyzx  // rt<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                add r0.xyz, r2.yzwy, r0.xyzx
                mul r0.xyz, r0.xyzx, r0.wwww
                add r0.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)  // textureSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t1.xyzw, s1  // color<0:Inf>
                mov r0.y, l(0)
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t2.xyzw, s2
                
                #line 139
                if_nz r1.y
                  mov o0.xyzw, l(0,0,0,1.000000)  // PS<0: 0f,1: 0f,2: 0f,3: 1f>
                  ret 
                endif 
                
                #line 149
                nop 
                
                #line 174
                mov r3.xyz, r3.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mul r2.yzw, r3.xxyz, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.yyzw
                mul r1.xyz, r1.xyzx, r2.yzwy
                mul r1.xyz, r1.xyzx, r2.xxxx
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r4.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r4.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r5.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r5.xyzx, r5.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r6.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r6.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r6.xyzx, r6.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r7.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r7.xyzx, r7.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r8.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r8.xyzx, r8.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r9.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r9.xyzx, r9.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r10.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r10.xyzx, r10.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r11.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r11.xyzx, r11.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r12.xyz, r12.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r12.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r12.xyzx, r12.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r13.xyz, r13.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r13.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r13.xyzx, r13.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r14.xyz, r14.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r14.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r14.xyzx, r14.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r15.xyz, r15.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r15.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r15.xyzx, r15.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r16.xyz, r16.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r16.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r16.xyzx, r16.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r17.xyz, r17.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r17.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r17.xyzx, r17.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r18.xyz, r18.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r18.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r18.xyzx, r18.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r19.xyz, r19.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r19.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r19.xyzx, r19.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r20.xyz, r20.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r20.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r20.xyzx, r20.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r21.xyz, r21.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r21.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r21.xyzx, r21.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r22.xyz, r22.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r22.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r22.xyzx, r22.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r23.xyz, r23.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r23.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r23.xyzx, r23.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r24.xyz, r24.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r24.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r24.xyzx, r24.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r25.xyz, r25.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r25.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r25.xyzx, r25.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r26.xyz, r26.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r26.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r26.xyzx, r26.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r27.xyz, r27.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r27.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r27.xyzx, r27.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r28.xyz, r28.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r28.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r28.xyzx, r28.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r29.xyz, r29.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r29.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r29.xyzx, r29.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r30.xyz, r30.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r30.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r30.xyzx, r30.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r31.xyz, r31.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r31.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r31.xyzx, r31.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r32.xyz, r32.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r32.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r32.xyzx, r32.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r33.xyz, r33.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r33.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r33.xyzx, r33.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r34.xyz, r34.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r34.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r34.xyzx, r34.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r35.xyz, r35.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r35.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r35.xyzx, r35.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r36.xyz, r36.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r36.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r36.xyzx, r36.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r37.xyz, r37.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r37.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r37.xyzx, r37.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r38.xyz, r38.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r38.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r38.xyzx, r38.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r39.xyz, r39.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r39.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r39.xyzx, r39.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r40.xyz, r40.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r40.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r40.xyzx, r40.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r41.xyz, r41.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r41.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r41.xyzx, r41.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r42.xyz, r42.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r42.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r42.xyzx, r42.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r43.xyz, r43.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r43.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r43.xyzx, r43.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r44.xyz, r44.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r44.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r44.xyzx, r44.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r45.xyz, r45.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r45.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r45.xyzx, r45.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r46.xyz, r46.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r46.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r46.xyzx, r46.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r47.xyz, r47.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r47.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r47.xyzx, r47.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r48.xyz, r48.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r48.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r48.xyzx, r48.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r49.xyz, r49.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r49.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r49.xyzx, r49.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r50.xyz, r50.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r50.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r50.xyzx, r50.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r51.xyz, r51.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r51.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r51.xyzx, r51.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r52.xyz, r52.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r52.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r52.xyzx, r52.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r53.xyz, r53.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r53.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r53.xyzx, r53.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r54.xyz, r54.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r54.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r54.xyzx, r54.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r55.xyz, r55.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r55.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r55.xyzx, r55.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r56.xyz, r56.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r56.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r56.xyzx, r56.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r57.xyz, r57.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r57.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r57.xyzx, r57.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r58.xyz, r58.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r58.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r58.xyzx, r58.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r59.xyz, r59.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r59.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r59.xyzx, r59.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r60.xyz, r60.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r60.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r60.xyzx, r60.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r61.xyz, r61.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r61.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r3.xyz, r61.xyzx, r61.xyzx
                mul r3.xyz, r3.xyzx, r3.xyzx
                mul r2.yzw, r2.yyzw, r3.xxyz
                mul r2.yzw, r2.yyzw, r2.xxxx
                add r1.xyz, r1.xyzx, r2.yzwy  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // fromPalette<0:Inf,1:Inf,2:Inf>
                mul r2.yzw, r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                mul r0.xyz, r0.xyzx, r0.xyzx
                mul r0.xyz, r0.xyzx, r0.xyzx
                mul r0.xyz, r0.xyzx, r2.yzwy
                mul r0.xyz, r0.xyzx, r2.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // sum<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                mov r0.xyz, r0.xyzx  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.w, l(1.000000)  // texColor<3: 1f>
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3: 1f>
                ret 
                // Approximately 936 instruction slots used
                            
            };
            AB_BlendFactor = float4(0, 0, 0, 0);
            AB_SampleMask = uint(0xffffffff);
            BlendState = AdditiveBlending;
            DS_StencilRef = uint(0);
            DepthStencilState = DisableDepth;
            RasterizerState = NoCulling;
        }

    }

}

